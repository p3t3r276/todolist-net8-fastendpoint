name: "fasttodo-dev"
services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    container_name: mssql
    restart: always
    environment:
        ACCEPT_EULA: Y
        MSSQL_SA_PASSWORD: MyPass@word
    volumes:
        - mssql_data:/var/opt/mssql
    networks:
        - fasttodo-network
    healthcheck:
        test: [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'MyPass@word' -C -Q 'SELECT 1' || exit 1"
        ]
        interval: 5s
        timeout: 5s
        retries: 10

  migrator:
    container_name: fasttodo-migrator
    build:
        context: ../
        dockerfile: Dockerfile.Migrations
    environment:
        - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
        - DB_PROJECT=${DB_PROJECT}
        - CONTEXT=${CONTEXT}
        - IDENTITY_CONNECTION_STRING=${IDENTITY_CONNECTION_STRING}
        - IDENTITY_PROJECT=${IDENTITY_PROJECT}
        - IDENTITY_CONTEXT=${IDENTITY_CONTEXT}
        - fastTodoOption__SQLProvider=${SQLProvider}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on:
        db:
          condition: service_healthy
    networks:
        - fasttodo-network
    restart: "no"

  api:
    container_name: fasttodo-api
    build:
      context: ../
      dockerfile: Dockerfile.dev
    environment:
      - ConnectionStrings__Default=${DB_CONNECTION_STRING}
      - ConnectionStrings__Identity=${IDENTITY_CONNECTION_STRING}
      - fastTodoOption__SQLProvider=${SQLProvider}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    restart: always
    depends_on:
      db:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    networks:
      - fasttodo-network

  nginx:
    image: nginx:latest
    container_name: api_gateway
    ports:
      - "80:80" 
      # - "443:443" # Uncomment if you're adding SSL/TLS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    restart: always
    networks:
      - fasttodo-network

volumes:
  mssql_data:

networks:
  fasttodo-network:
